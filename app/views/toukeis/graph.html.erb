<h2>統計グラフ画面</h2>
<hr/>
<%= render 'form2' %>

<%= hidden_field_tag 'graph_cond[sumUnt]', @graph_cond[:sumUnt] %>
<%= hidden_field_tag 'graph_cond[outCond]', @graph_cond[:outCond] %>
<%= hidden_field_tag 'graph_cond[outYm]', @graph_cond[:outYm] %>
<%= hidden_field_tag 'graph_cond[targetSpnFrom]', @graph_cond[:targetSpnFrom] %>
<%= hidden_field_tag 'graph_cond[targetSpnTo]', @graph_cond[:targetSpnTo] %>

<script>
$(function() {

    // Get graph data.
    $.ajax({
      url: "/toukeis/graph_data.json",
      dataType: "json",
      root: "list",
      data: {
        'sumUnt' : $('#graph_cond_sumUnt').val(),
        'outCond' : $('#graph_cond_outCond').val(),
        'outYm' : $('#graph_cond_outYm').val(),
        'targetSpnFrom' : $('#graph_cond_targetSpnFrom').val(),
        'targetSpnTo' : $('#graph_cond_targetSpnTo').val()
      },
      success: function(data) {
        var kingaku = [];
        var daisu = [];
        var ticks = [];
        $.each(data.rsdata, function(index, item) {
          ticks.push(item.sumUnt);
          kingaku.push(_to_num(item.kingaku));
          daisu.push(_to_num(item.daisu));
        })

        var kingaku_min = Math.min.apply(null, kingaku);
        var daisu_min = Math.min.apply(null, daisu);

        // 金額・台数のグラフを表示する
        show_graph('chart_kingaku', kingaku, ticks, '金額', get_interval(kingaku));
        show_graph('chart_daisu', daisu, ticks, '台数', get_interval(daisu));
      }
    })

});

function get_interval(array) {
    var min_val = Math.max.apply(null, array);
    var interval = null;
    if (min_val < 10) {interval = 1}
    return interval;
}

function show_graph(chart_id, values, ticks, label, interval) {
    $("#" + chart_id).width(900).height(50+(40 * values.length));;
    var plot_kin = $.jqplot(chart_id, [values], {
        seriesDefaults: {
            renderer: $.jqplot.BarRenderer,
            pointLabels: { show: true, location: 'e', edgeTolerance: -15 },
            shadowAngle: 135,
            rendererOptions: {
                barDirection: 'horizontal'
            }
        },
        series:[
            {label: label}
        ],
        axes: {
            yaxis: {
                renderer: $.jqplot.CategoryAxisRenderer,
                ticks: ticks
            },
            xaxis: {
                min: 0,
                tickInterval: interval,
                tickOptions: { formatString: "%'d" }
            }
        },
        legend: {
          show: true,
          location: 'e',
          placement: 'outside'
        }

    });
}

function _to_num(val) {
  if(val) {
    return parseInt(val);
  } else {
    return 0;
  }
}
</script>
